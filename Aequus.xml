<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aequus</name>
    </assembly>
    <members>
        <member name="P:Aequus.Aequus.GameWorldActive">
            <summary>
            Shorthand for a bunch of checks determining whether the game is unpaused.
            </summary>
        </member>
        <member name="P:Aequus.Aequus.HQ">
            <summary>
            Shorthand for <see cref="F:Aequus.Common.Preferences.ClientConfig.Instance"/>.<see cref="P:Aequus.Common.Preferences.ClientConfig.HighQuality">HighQuality</see>.
            </summary>
        </member>
        <member name="P:Aequus.Aequus.LogMore">
            <summary>
            Shorthand for <see cref="F:Aequus.Common.Preferences.ClientConfig.Instance"/>.<see cref="P:Aequus.Common.Preferences.ClientConfig.InfoDebugLogs">HighQuality</see>.
            </summary>
        </member>
        <member name="P:Aequus.Aequus.HardmodeTier">
            <summary>
            Shorthand for checking <code><see cref="F:Terraria.Main.hardMode"/> || <see cref="F:Aequus.AequusWorld.downedOmegaStarite"/></code>
            </summary>
        </member>
        <member name="M:Aequus.Aequus.GetPacket(Aequus.PacketType)">
            <summary>
            Shorthand for
            <code><see cref="T:Terraria.ModLoader.ModPacket"/> packet = <see cref="P:Aequus.Aequus.Instance"/>.<see cref="M:Terraria.ModLoader.Mod.GetPacket(System.Int32)">GetPacket(int)</see>;</code>
            <code>packet.Write((<see cref="T:System.Byte"/>)<see cref="T:Aequus.PacketType"/>.X);</code>
            </summary>
            <param name="type">The ID of the Packet</param>
            <returns></returns>
        </member>
        <member name="F:Aequus.AequusPlayer.maxLifeRespawnReward">
            <summary>
            Enabled by <see cref="T:Aequus.Items.Consumables.Permanent.VictorsReward"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.whitePhial">
            <summary>
            Enabled by <see cref="T:Aequus.Items.Consumables.Permanent.WhitePhial"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.moroSummonerFruit">
            <summary>
            Enabled by <see cref="T:Aequus.Items.Consumables.Permanent.Moro"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.ghostTombstones">
            <summary>
            Enabled by <see cref="T:Aequus.Items.Tools.GhostlyGrave"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.eventDemonSiege">
            <summary>
            A point determining one of the close gore nests. Prioritized by their order in <see cref="P:Aequus.Biomes.DemonSiege.DemonSiegeSystem.ActiveSacrifices"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.closestEnemy">
            <summary>
            The closest 'enemy' NPC to the player. Updated in <see cref="M:Aequus.AequusPlayer.PostUpdate"/> -> <see cref="M:Aequus.AequusPlayer.ClosestEnemy"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.forceDayState">
            <summary>
            0 = no force, 1 = force day, 2 = force night
            <para>Used by <see cref="T:Aequus.Buffs.NoonBuff"/> and set to 1</para>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.accFaultyCoin">
            <summary>
            A percentage chance for a successful scam, where you don't consume money. Values below or equal 0 mean no scams, Values above or equal 1 mean 100% scam rate. Used by <see cref="T:Aequus.Items.Accessories.Utility.FaultyCoin"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.accForgedCard">
            <summary>
            A flat discount variable. Decreases shop prices by this amount. Used by <see cref="T:Aequus.Items.Accessories.Utility.ForgedCard"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.luckRerolls">
            <summary>
            Rerolls luck (rounded down amt of luckRerolls) times, if there is a decimal left, then it has a (luckRerolls decimal) chance of rerolling again.
            <para>Used by <see cref="T:Aequus.Items.Accessories.Misc.RabbitsFoot"/></para> 
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.dropRerolls">
            <summary>
            Used to increase droprates. Rerolls the drop (amt of lootluck) times, if there is a decimal left, then it has a (lootluck decimal) chance of rerolling again.
            <para>Used by <see cref="T:Aequus.Items.Accessories.Utility.GrandReward"/></para> 
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.increasedRegen">
            <summary>
            An amount of regen to add to the player in <see cref="M:Aequus.AequusPlayer.UpdateLifeRegen"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.accSentryInheritence">
            <summary>
            Set by <see cref="T:Aequus.Items.Accessories.Summon.Sentry.SantankSentry"/> and <see cref="T:Aequus.Items.Accessories.Summon.Sentry.MechsSentry"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.accExpertBoost">
            <summary>
            Set to true by <see cref="T:Aequus.Items.Accessories.Gimmick.TheReconstruction"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.accFoolsGoldRing">
            <summary>
            Set by <see cref="T:Aequus.Items.Accessories.Offense.FoolsGoldRing"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.wearingPassiveSummonHelmet">
            <summary>
            Set to true by <see cref="T:Aequus.Items.Armor.Passive.DartTrapHat"/>, <see cref="T:Aequus.Items.Armor.Passive.SuperDartTrapHat"/>, <see cref="T:Aequus.Items.Armor.Passive.FlowerCrown"/>, <see cref="T:Aequus.Items.Armor.Passive.VenomDartTrapHat"/>, <see cref="T:Aequus.Items.Armor.Passive.MoonlunaHat"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.summonHelmetTimer">
            <summary>
            Used by summon helmets (<see cref="T:Aequus.Items.Armor.Passive.DartTrapHat"/>, <see cref="T:Aequus.Items.Armor.Passive.SuperDartTrapHat"/>, <see cref="T:Aequus.Items.Armor.Passive.FlowerCrown"/>) to time projectile spawns and such.
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.lastSelectedItem">
            <summary>
            Tracks <see cref="F:Terraria.Player.selectedItem"/>, updated in <see cref="M:Aequus.AequusPlayer.PostItemCheck"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.itemCooldownMax">
            <summary>
            When a new cooldown is applied, this gets set to the duration of the cooldown. Does not tick down unlike <see cref="F:Aequus.AequusPlayer.itemCooldown"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.itemCooldown">
            <summary>
            When above 0, the cooldown is active. Ticks down by 1 every player update.
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.itemCombo">
            <summary>
            When above 0, you are in a combo. Ticks down by 1 every player update.
            <para>Item "combos" are used for determining what type of item action to use.</para>
            <para>A usage example would be a weapon with a 3 swing pattern. Each swing will increase the combo meter by 60, and when it becomes greater than 120, reset to 0.</para>
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.itemUsage">
            <summary>
            Increments when the player uses an item. Does not increment when the player is using the alt function of an item.
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.itemSwitch">
            <summary>
            A short lived timer which gets set to 30 when the player has a different selected item.
            </summary>
        </member>
        <member name="F:Aequus.AequusPlayer.netInteractionCooldown">
            <summary>
            Used to prevent players from spam interacting with special objects which may have important networking actions which need to be awaited. Ticks down by 1 every player update.
            </summary>
        </member>
        <member name="P:Aequus.AequusPlayer.HasCooldown">
            <summary>
            Helper for whether or not the player currently has a cooldown
            </summary>
        </member>
        <member name="P:Aequus.AequusPlayer.InDanger">
            <summary>
            Helper for whether or not the player is in danger
            </summary>
        </member>
        <member name="M:Aequus.AequusPlayer.UpdateBank(Terraria.Chest,System.Int32)">
            <summary>
            
            </summary>
            <param name="bank"></param>
            <param name="bankType">Types: 
            <list type="number">
            Piggy Bank
            <item>Safe</item>
            <item>Defender's Forge</item>
            <item>Void Bag</item>
            </list></param>
        </member>
        <member name="M:Aequus.AequusPlayer.ClosestEnemy">
            <summary>
            Finds the closest enemy to the player, and caches its index in <see cref="F:Terraria.Main.npc"/>
            </summary>
        </member>
        <member name="M:Aequus.AequusPlayer.UpdateMaxZombies">
            <summary>
            If the player has too many zombies, it kills the oldest and least prioritized one.
            </summary>
        </member>
        <member name="M:Aequus.AequusPlayer.PreDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Called right before all player layers have been drawn
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Aequus.AequusPlayer.PostDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Called right after all player layers have been drawn
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Aequus.AequusPlayer.SetCooldown(System.Int32,System.Boolean,Terraria.Item)">
            <summary>
            Sets a cooldown for the player. If the cooldown value provided is less than the player's currently active cooldown, this does nothing.
            <para>Use in combination with <see cref="P:Aequus.AequusPlayer.HasCooldown"/></para>
            </summary>
            <param name="cooldown">The amount of time the cooldown lasts in game ticks.</param>
            <param name="ignoreStats">Whether or not to ignore cooldown stats and effects. Setting this to true will prevent them from effecting this cooldown</param>
            <param name="itemReference"></param>
        </member>
        <member name="M:Aequus.AequusPlayer.ProjectileClone(Terraria.Player)">
            <summary>
            Creates a cloned player for a fake projectile-player clone.
            </summary>
            <param name="basePlayer"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.AequusPlayer.GetEquips(Terraria.Player,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a list of equipment from the player.
            </summary>
            <param name="player"></param>
            <param name="armor"></param>
            <param name="accessories"></param>
            <param name="sentrySlot"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.AequusPlayer.SpawnEnchantmentDusts(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Terraria.Player,System.Boolean)">
            <summary>
            Spawns Flask and other "Enchantment" dusts, like the Magma Stone flames.
            </summary>
            <param name="position"></param>
            <param name="velocity"></param>
            <param name="player"></param>
            <param name="magmaStone"></param>
        </member>
        <member name="M:Aequus.AequusPlayer.CurrentPlayerContext">
            <summary>
            Gets a player context for applying specific effects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aequus.AequusPlayer.CalcHealing(Terraria.Player,System.Int32)">
            <summary>
            Calculates how much to actually heal.
            </summary>
            <param name="player"></param>
            <param name="healAmt"></param>
            <returns></returns>
        </member>
        <member name="P:Aequus.AequusSystem.Main_invasionSize">
            <summary>
            Caches <see cref="F:Terraria.Main.invasionSize"/>
            </summary>
        </member>
        <member name="P:Aequus.AequusSystem.Main_invasionType">
            <summary>
            Caches <see cref="F:Terraria.Main.invasionType"/>
            </summary>
        </member>
        <member name="P:Aequus.AequusSystem.Main_bloodMoon">
            <summary>
            Caches <see cref="F:Terraria.Main.bloodMoon"/>
            </summary>
        </member>
        <member name="P:Aequus.AequusSystem.Main_eclipse">
            <summary>
            Caches <see cref="F:Terraria.Main.eclipse"/>
            </summary>
        </member>
        <member name="P:Aequus.AequusSystem.Main_dayTime">
            <summary>
            Caches <see cref="F:Terraria.Main.dayTime"/>
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.TileCountsMultiplier">
            <summary>
            Used by the <see cref="T:Aequus.Content.Town.CarpenterNPC.Carpenter"/> for detecting biomes easier, since Shutterstocker shots may not include enough tiles to register a biome.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.usedWhiteFlag">
            <summary>
            Whether or not the <see cref="T:Aequus.Items.Misc.Carpentry.Rewards.WhiteFlag"/> item was used.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedEventCosmic">
            <summary>
            Whether or not the Glimmer event was completed.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedEventDemon">
            <summary>
            Whether or not the Demon Siege event was completed.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedEventAtmosphere">
            <summary>
            Whether or not the Gale Streams event was completed.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedSpaceSquid">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.SpaceSquidMiniboss.SpaceSquid"/> miniboss was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedRedSprite">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.RedSpriteMiniboss.RedSprite"/> miniboss was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedCrabson">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.Crabson.Crabson"/> boss was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedUpriser">
            <summary>
            Unused.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedHyperStarite">
            <summary>
            Whether or not the <see cref="T:Aequus.NPCs.Monsters.Night.Glimmer.HyperStarite"/> enemy was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedUltraStarite">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.UltraStariteMiniboss.UltraStarite"/> enemy was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedOmegaStarite">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.OmegaStarite.OmegaStarite"/> boss was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.downedDustDevil">
            <summary>
            Whether or not the <see cref="T:Aequus.Content.Boss.DustDevil.DustDevil"/> boss was defeated.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.shadowOrbsBrokenTotal">
            <summary>
            A tracker of the total amount of Shadow Orbs broken in the world, this is currently unused.
            </summary>
        </member>
        <member name="F:Aequus.AequusWorld.tinkererRerolls">
            <summary>
            How many times the tinkerer should re-roll items for a potential higher value prefix. 
            This value flips between 0 and 3 depending on if the <see cref="T:Aequus.Items.Consumables.Permanent.TinkerersGuidebook"/> has been consumed.
            </summary>
        </member>
        <member name="M:Aequus.AequusWorld.OreTiers">
            <summary>
            
            </summary>
            <returns>A bitsbyte instance where 0 is copper, 1 is iron, 2 is silver, 3 is gold. When they are false, they are the alternate world ore.</returns>
        </member>
        <member name="M:Aequus.AequusWorld.HasCobalt">
            <summary>
            
            </summary>
            <returns>true if the world has cobalt, false if the world has palladium, null if the world isn't in hardmode or has neither</returns>
        </member>
        <member name="M:Aequus.AequusWorld.HasMythril">
            <summary>
            
            </summary>
            <returns>true if the world has mythril, false if the world has orichalcum, null if the world isn't in hardmode or has neither</returns>
        </member>
        <member name="M:Aequus.AequusWorld.HasAdamantite">
            <summary>
            
            </summary>
            <returns>true if the world has adamantite, false if the world has titanium, null if the world isn't in hardmode or has neither</returns>
        </member>
        <member name="M:Aequus.Biomes.DemonSiege.DemonSiegeSystem.FindDemonSiege(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Finds and returns the closest demon siege
            </summary>
            <returns></returns>
        </member>
        <member name="F:Aequus.Buffs.AequusBuff.preventRightClick">
            <summary>
            Used to prevent right click effects when the <see cref="T:Aequus.Items.Accessories.Misc.PotionCanteen"/> is equipped.
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.DroneBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.Light.PersonalDronePack"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.FamiliarBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.FamiliarPickaxe"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.MiningPetBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.Light.MiningPetSpawner"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.OmegaStariteBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.Light.DragonBall"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.RedSpriteBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.Light.LightningRod"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.SpaceSquidBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.ToySpaceGun"/>
            </summary>
        </member>
        <member name="T:Aequus.Buffs.Pets.TorraBuff">
            <summary>
            Applied by <see cref="T:Aequus.Items.Vanity.Pets.SwagLookingEye"/>
            </summary>
        </member>
        <member name="T:Aequus.Common.Effects.CameraFocus">
            <summary>
            Manages screen panning
            </summary>
        </member>
        <member name="P:Aequus.Common.Effects.CameraFocus.Context">
            <summary>
            A context string for the current focus
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.target">
            <summary>
            The target position for the camera in the world
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.cameraPosition">
            <summary>
            The camera's position 
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.priority">
            <summary>
            A priority for determining whether or not a new camera focus can be added
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.speed">
            <summary>
            The speed of the camera
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.cameraProgress">
            <summary>
            The progress of the camera from its original position to its destination
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.hold">
            <summary>
            How long the camera holds in its target position after the caller stops running <see cref="M:Aequus.Common.Effects.CameraFocus.SetTarget(System.String,Microsoft.Xna.Framework.Vector2,Aequus.Common.Effects.CameraPriority,System.Single,System.Int32)"/>
            </summary>
        </member>
        <member name="F:Aequus.Common.Effects.CameraFocus.returning">
            <summary>
            Whether or not the camera is returning
            </summary>
        </member>
        <member name="M:Aequus.Common.Effects.CameraFocus.SetTarget(System.String,Microsoft.Xna.Framework.Vector2,Aequus.Common.Effects.CameraPriority,System.Single,System.Int32)">
            <summary>
            Sets the camera target to a position, may return false if your priority is below a current target's priority
            </summary>
            <param name="key">Context key, only really useful for 3rd party mods</param>
            <param name="target">A world coordinate to point the camera at</param>
            <param name="priority">The priority of this camera target. If there is a current camera target, and its priority is above, it will prevent you from setting a target and this method will return false</param>
            <param name="speed">The speed of the camera, the exact time it will get there is: <code>speed / 50</code>So 6 speed means it will get into position in 8 frames. Clamped between 6 and 25</param>
            <param name="hold">How long the camera holds in its target position after the caller stops running <see cref="M:Aequus.Common.Effects.CameraFocus.SetTarget(System.String,Microsoft.Xna.Framework.Vector2,Aequus.Common.Effects.CameraPriority,System.Single,System.Int32)"/></param>
            <returns>Whether or not the camera target has been set to a new position. Spamming SetTarget will only return true on the first SetTarget call, and the rest will return false</returns>
        </member>
        <member name="T:Aequus.Common.ModPlayers.PlayerWingModifiers">
            <summary>
            Modifies the stats of wings
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.horizontalSpeed">
            <summary>
            See: <see cref="F:Terraria.Player.accRunSpeed"/>
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.horizontalAcceleration">
            <summary>
            See: <see cref="F:Terraria.Player.runAcceleration"/>
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.verticalAscentWhenFalling">
            <summary>
            Wings default to 0.5
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.verticalAscentWhenRising">
            <summary>
            Wings default to 0.1
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.verticalMaxCanAscendMultiplier">
            <summary>
            Wings default to 0.5
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.verticalMaxAscentMultiplier">
            <summary>
            Wings default to 1.5
            </summary>
        </member>
        <member name="F:Aequus.Common.ModPlayers.PlayerWingModifiers.verticalConstantAscend">
            <summary>
            Wings default to 0.1
            </summary>
        </member>
        <member name="T:Aequus.SkyDarkness">
            <summary>
            Used for darken-ing the sky for flashy visual effects
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusItem.HasWeaponCooldown">
            <summary>
            Whether or not this weapon has a cooldown effect. Currently only allows the cooldown background to be drawn behind this item when the player has a cooldown.
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusItem.RarityNames">
            <summary>
            A list of names for ingame rarities.
            </summary>
        </member>
        <member name="F:Aequus.Items.Accessories.Summon.Sentry.SentrySquid.TurretStaffUsage.customAction">
            <summary>
            Player is the player who is summoning the sentry
            <para>Item is the item used to summon the sentry</para>
            <para>NPC is the target</para>
            <para>.</para>
            <para>returns:</para> 
                Whether it was successful at placing a sentry
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusRecipes.ConditionOmegaStarite">
            <summary>
            A condition which locks a recipe behind the <see cref="F:Aequus.AequusWorld.downedOmegaStarite"/> flag.
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusRecipes.AnyEctoplasm">
            <summary>
            <see cref="T:Terraria.RecipeGroup"/> for <see cref="F:Terraria.ID.ItemID.Ectoplasm"/> and <see cref="T:Aequus.Items.Materials.Hexoplasm"/>.
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusRecipes.AnyMosshrooms">
            <summary>
            <see cref="T:Terraria.RecipeGroup"/> for <see cref="T:Aequus.Content.Elites.Items.ElitePlantArgon"/>, <see cref="T:Aequus.Content.Elites.Items.ElitePlantKrypton"/>, and <see cref="T:Aequus.Content.Elites.Items.ElitePlantXenon"/>.
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusRecipes.AnyQuestFish">
            <summary>
            <see cref="T:Terraria.RecipeGroup"/> for all IDs in <see cref="F:Terraria.Main.anglerQuestItemNetIDs"/>.
            </summary>
        </member>
        <member name="P:Aequus.Items.AequusRecipes.AnyFruit">
            <summary>
            <see cref="T:Terraria.RecipeGroup"/> for all IDs in <see cref="P:Aequus.Items.AequusItem.FruitIDs"/>.
            </summary>
        </member>
        <member name="M:Aequus.Items.Consumables.SlotMachines.SlotMachineDropRule.#ctor(Aequus.Items.Consumables.SlotMachines.SlotMachineBase,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="roulette">An instance of the Roulette, for a better lookup.</param>
            <param name="itemID">The dropped item ID</param>
            <param name="rouletteChoice">The item which needs to be rolled for a 100% drop</param>
            <param name="dropChance">A drop chance of 100% means it will only drop when chosen by the scrolling item list (Since if it already drops 100% of the time, it might as well not be on the list.)</param>
            <param name="amountDroppedMinimum"></param>
            <param name="amountDroppedMaximum"></param>
            <param name="chanceNumerator"></param>
        </member>
        <member name="M:Aequus.Items.Consumables.SlotMachines.SlotMachineDropRule.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="rouletteItemID">The Item ID of the roulette</param>
            <param name="itemID">The dropped item ID</param>
            <param name="rouletteChoice">The item which needs to be rolled for a 100% drop</param>
            <param name="dropChance">A drop chance of 100% means it will only drop when chosen by the scrolling item list (Since if it already drops 100% of the time, it might as well not be on the list.)</param>
            <param name="amountDroppedMinimum"></param>
            <param name="amountDroppedMaximum"></param>
            <param name="chanceNumerator"></param>
        </member>
        <member name="M:Aequus.Items.Fishing.Bait.IModifyCatchFish.ModifyCatchFish(Terraria.DataStructures.FishingAttempt,System.Int32@,System.Int32@,Terraria.AdvancedPopupRequest@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            
            </summary>
            <param name="attempt"></param>
            <param name="itemDrop"></param>
            <param name="npcSpawn"></param>
            <param name="sonar"></param>
            <param name="sonarPosition"></param>
            <returns>Return false to prevent Aequus from running fish checks.</returns>
        </member>
        <member name="M:Aequus.Items.Fishing.Bait.IModifyFishItem.ModifyFishItem(Terraria.Player,Terraria.Item)">
            <summary>
            
            </summary>
            <param name="fish"></param>
        </member>
        <member name="M:Aequus.Items.Fishing.Bait.IModifyFishAttempt.OnItemRoll(Terraria.Projectile,Terraria.DataStructures.FishingAttempt@)">
            <summary>
            
            </summary>
            <param name="bobber"></param>
            <param name="fisher"></param>
            <returns>Return false to prevent vanilla rolling fish</returns>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueCrabCrevice">
            <summary>
            50 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueGlimmer">
            <summary>
            1 gold
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueDemonSiege">
            <summary>
            2 gold
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueOmegaStarite">
            <summary>
            3 gold (<see cref="P:Aequus.Items.ItemDefaults.ValueEarlyHardmode"/>)
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueGaleStreams">
            <summary>
            2 gold 50 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueDustDevil">
            <summary>
            3 gold (<see cref="P:Aequus.Items.ItemDefaults.ValueEarlyHardmode"/>)
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueBuffPotion">
            <summary>
            2 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueEyeOfCthulhu">
            <summary>
            50 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueBloodMoon">
            <summary>
            50 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueDungeon">
            <summary>
            1 gold 75 silver
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueEarlyHardmode">
            <summary>
            3 gold
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueHardmodeDungeon">
            <summary>
            6 gold
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemDefaults.ValueLunarPillars">
            <summary>
            10 gold
            </summary>
        </member>
        <member name="M:Aequus.Items.ItemHooks.IModifyFishingPower.ModifyFishingPower(Terraria.Player,Aequus.AequusPlayer,Terraria.Item,System.Single@)">
            <summary>
            
            </summary>
            <param name="player"></param>
            <param name="fishing"></param>
            <param name="fishingRod"></param>
            <param name="fishingLevel"></param>
        </member>
        <member name="M:Aequus.Items.ItemHooks.IUpdateItemDye.Player_UpdateItemDye(On.Terraria.Player.orig_UpdateItemDye,Terraria.Player,System.Boolean,System.Boolean,Terraria.Item,Terraria.Item)">
            <summary>
            
            </summary>
            <param name="orig"></param>
            <param name="self"></param>
            <param name="isNotInVanitySlot"></param>
            <param name="isSetToHidden"></param>
            <param name="armorItem">If you are an equipped item, this is you.</param>
            <param name="dyeItem">If you are a dye, this is you.</param>
        </member>
        <member name="T:Aequus.Items.ItemSortingPriority.Materials">
            <summary>
            <see cref="F:Terraria.ID.ItemID.Sets.SortingPriorityMaterials"/>
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Amethyst">
            <summary>
            37
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Topaz">
            <summary>
            38
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Sapphire">
            <summary>
            39
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Emerald">
            <summary>
            40
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Ruby">
            <summary>
            41
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Diamond">
            <summary>
            42
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Amber">
            <summary>
            43
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CopperOre">
            <summary>
            44
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CopperBar">
            <summary>
            45
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TinOre">
            <summary>
            46
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TinBar">
            <summary>
            47
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.IronOre">
            <summary>
            48
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.IronBar">
            <summary>
            49
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.LeadOre">
            <summary>
            50
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.LeadBar">
            <summary>
            51
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SilverOre">
            <summary>
            52
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SilverBar">
            <summary>
            53
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TungstenOre">
            <summary>
            54
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TungstenBar">
            <summary>
            55
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.GoldOre">
            <summary>
            56
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.GoldBar">
            <summary>
            57
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.PlatinumOre">
            <summary>
            58
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.PlatinumBar">
            <summary>
            59
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Meteorite">
            <summary>
            60
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.MeteoriteBar">
            <summary>
            61
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.DemoniteOre">
            <summary>
            62
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.DemoniteBar">
            <summary>
            63
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.ShadowScale">
            <summary>
            64
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CrimtaneOre">
            <summary>
            65
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CrimtaneBar">
            <summary>
            66
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TissueSample">
            <summary>
            67
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SturdyFossil">
            <summary>
            68
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Hellstone">
            <summary>
            69
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.HellstoneBar">
            <summary>
            70
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfLight">
            <summary>
            71
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfNight">
            <summary>
            72
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfFlight">
            <summary>
            73
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfSight">
            <summary>
            74
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfFright">
            <summary>
            75
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SoulOfMight">
            <summary>
            76
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CobaltOre">
            <summary>
            77
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.CobaltBar">
            <summary>
            78
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.PalladiumOre">
            <summary>
            79
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.PalladiumBar">
            <summary>
            80
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.MythrilOre">
            <summary>
            81
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.MythrilBar">
            <summary>
            82
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.OrichalcumOre">
            <summary>
            83
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.OrichalcumBar">
            <summary>
            84
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.AdamantiteOre">
            <summary>
            85
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.AdamantiteBar">
            <summary>
            86
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TitaniumOre">
            <summary>
            87
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.TitaniumBar">
            <summary>
            88
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.HallowedBar">
            <summary>
            89
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.ChlorophyeOre">
            <summary>
            90
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.ChlorophyeBar">
            <summary>
            91
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.ShroomiteBar">
            <summary>
            92
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Ectoplasm">
            <summary>
            93
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SpectreBar">
            <summary>
            94
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.StardustFragment">
            <summary>
            95
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.NebulaFragment">
            <summary>
            96
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.VortexFragment">
            <summary>
            97
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.SolarFragment">
            <summary>
            98
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Luminite">
            <summary>
            99
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.LuminiteBar">
            <summary>
            100
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.Energies">
            <summary>
            70 (<see cref="P:Aequus.Items.ItemSortingPriority.Materials.HellstoneBar"/>)
            </summary>
        </member>
        <member name="P:Aequus.Items.ItemSortingPriority.Materials.UltimateEnergy">
            <summary>
            88 (<see cref="P:Aequus.Items.ItemSortingPriority.Materials.TitaniumBar"/>)
            </summary>
        </member>
        <member name="T:Aequus.Items.OnlineLinkedItem">
            <summary>
            Currently only used by the Aequus Music mod's music boxes.
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceItemUsed">
            <summary>
            The item source used to spawn this projectile. Defaults to 0 (<see cref="F:Terraria.ID.ItemID.None"/>)
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceAmmoUsed">
            <summary>
            The ammo source used to spawn this projectile. Defaults to 0 (<see cref="F:Terraria.ID.ItemID.None"/>)
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceNPC">
            <summary>
            The npc index which spawned this projectile. Be aware the NPC may have died or was swapped with another, so this value is useless for now. Defaults to -1.
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceProjType">
            <summary>
            The ID of the projectile which spawned this projectile. Defaults to 0 (<see cref="F:Terraria.ID.ProjectileID.None"/>).
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceProjIdentity">
            <summary>
            The identity (<see cref="F:Terraria.Projectile.identity"/>) of the projectile which spawned this projectile. Defaults to -1.
            </summary>
        </member>
        <member name="F:Aequus.Projectiles.AequusProjectile.sourceProj">
            <summary>
            An approximated index of the projectile which spawned this projectile. Defaults to -1.
            </summary>
        </member>
        <member name="P:Aequus.Projectiles.Misc.PixelCameraProj.PhotoState">
            <summary>
            A better naming scheme for how this camera functions
            </summary>
        </member>
        <member name="M:Aequus.Projectiles.PlayerAttachedProjBase.GetOwnerValues(Terraria.Player@,Aequus.AequusPlayer@,System.Int32@,Aequus.Common.GlobalProjs.SentryAccessoriesManager@)">
            <summary>
            Gets an owner. Returns a santank dummy player if the projOwner is greater than -1.
            </summary>
            <param name="player">The owner of this projectile.</param>
            <param name="aequus">The "AequusPlayer" instance on the player.</param>
            <param name="projOwner">The "Projectile owner". This defaults to -1 unless this projectile is spawned with a projectile owner, then it returns their index in <see cref="F:Terraria.Main.projectile"/></param>
            <param name="santank">The Projectile owner's <see cref="T:Aequus.Common.GlobalProjs.SentryAccessoriesManager"/> instance. Defaults to null unless <paramref name="projOwner"/> is greater than -1.</param>
        </member>
        <member name="F:Aequus.Projectiles.Summon.ScribbleNotebookMinion.EmojiID.Thirsty">
            <summary>
            🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵🥵 so thirsty uuuuuuuuooooooooooooooooooh~
            </summary>
        </member>
        <member name="T:Aequus.NPCs.BestiaryBuilder">
            <summary>
            Helper class for setting up bestiary entries.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.heatDamage">
            <summary>
            A flag determining whether or not this NPC inflicts "Heat Damage"
            <para>Used for the <see cref="T:Aequus.Items.Potions.FrostPotion"/>.</para>
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noHitEffect">
            <summary>
            Disables hit effects.
            <para>Used to make the Chomper minion look like it's swallowing the enemy it hit.</para>
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noContactDamage">
            <summary>
            Disables contact damage.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noOnKill">
            <summary>
            Disables on-kill effects like loot and player accessory effects.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noAI">
            <summary>
            Disables typical AI from running, only used for testing.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noVisible">
            <summary>
            Effectively the same as <see cref="F:Terraria.NPC.hide"/>, except refreshed to false in ResetEffects().
            <para>This is used on the slimes that are attached to <see cref="T:Aequus.NPCs.Monsters.Sky.GaleStreams.StreamingBalloon"/>, to make the appear hidden and properly be visable again after leaving the balloon.</para>
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.noTakingDamage">
            <summary>
            Effectively the same as <see cref="F:Terraria.NPC.dontTakeDamage"/>, except it ticks down before allowing the target to take damage again.
            <para>This is used on the Healer Drone to make town NPCs immortal for a couple seconds</para>
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.isChildNPC">
            <summary>
            If the NPC came from a hereditary source, like being spawned from another NPC, or a projectile, or whatever else, this will be true.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.lastHit">
            <summary>
            How long since this NPC has been striked.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.debuffDamage">
            <summary>
            Flat life regen damage addition.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AequusNPC.statAttackDamage">
            <summary>
            Can be used to increase/decrease an NPC's damage without directly touching <see cref="F:Terraria.NPC.damage"/>.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AIs.LegacyAIManEater.range">
            <summary>
            The range in units the NPC can travel. Defaults to 150
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AIs.LegacyAIManEater.movementSpeed">
            <summary>
            Used to control the movement speed of the NPC. Defaults to 0.035.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AIs.LegacyAIManEater.speedCap">
            <summary>
            The maximum speed the NPC can travel. Defaults to 3
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AIs.LegacyAIManEater.faceAwayFromConnection">
            <summary>
            In order to make the NPC rotate their sprite like the Fungi Bulbs.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.AIs.LegacyAIManEater.shoots">
            <summary>
            Whether the NPC shoots at all. Defaults to false
            </summary>
        </member>
        <member name="M:Aequus.NPCs.AIs.LegacyAIManEater.CanShoot">
            <summary>
            Whether the NPC can shoot when it is ready and shoots is set to true. Defaults to if it is not in a tile, and has a line to shoot the player 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aequus.NPCs.AIs.LegacyAIManEater.GetShootTimer">
            <summary>
            The maximum time before the NPC shoots. Defaults to 120.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aequus.NPCs.AIs.LegacyAIManEater.Shoot">
            <summary>
            Called when the NPC shoots.
            </summary>
        </member>
        <member name="M:Aequus.NPCs.AIs.LegacyAIManEater.ResetShootTimer(System.Boolean,System.Int32)">
            <summary>
            Defaults to reseting the timer to 0 when hit. And reseting the timer to [Timer max] - 20 when not hit
            </summary>
            <param name="justHit">Whether the NPC was hit. This is the basically exact same as <see cref="F:Terraria.NPC.justHit"/> just passed as a parameter</param>
            <param name="current"></param>
            <returns>The new timer</returns>
        </member>
        <member name="M:Aequus.NPCs.AIs.LegacyAIManEater.PreDrawChain(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify how the chain is drawn
            </summary>
            <param name="spriteBatch">The sprite batch</param>
            <param name="screenPos"></param>
            <param name="drawColor"></param>
            <param name="chainTexture">The texture</param>
            <param name="frame">The texture</param>
            <param name="_drawColor">The color the entire chain is drawn in</param>
            <returns>Whether to draw the chain</returns>
        </member>
        <member name="T:Aequus.NPCs.GlobalNPCs.SpawnsManager.ValidSpawnParameters">
            <summary>
            Parameters for whether or not certain locations are valid spots for regular entities to spawn.
            </summary>
        </member>
        <member name="F:Aequus.NPCs.GlobalNPCs.SpawnsManager.ValidSpawnParameters.Pillars">
            <summary>
            Set to true to allow spawning during the Pillar event. (<see cref="P:Terraria.Player.ZoneTowerSolar"/> / <see cref="P:Terraria.Player.ZoneTowerVortex"/> / <see cref="P:Terraria.Player.ZoneTowerNebula"/> / <see cref="P:Terraria.Player.ZoneTowerStardust"/>)
            </summary>
        </member>
        <member name="F:Aequus.NPCs.GlobalNPCs.SpawnsManager.ValidSpawnParameters.SunMoonEvents">
            <summary>
            Set to true to allow spawning during the Eclipse, Pumpkin Moon, or Frost Moon (<see cref="F:Terraria.Main.eclipse"/> / <see cref="F:Terraria.Main.pumpkinMoon"/> / <see cref="F:Terraria.Main.snowMoon"/>)
            </summary>
        </member>
        <member name="F:Aequus.NPCs.GlobalNPCs.SpawnsManager.ValidSpawnParameters.Invasion">
            <summary>
            Set to true to allow spawning during invasions (<see cref="F:Terraria.Main.invasionType"/> / <see cref="F:Terraria.ModLoader.NPCSpawnInfo.Invasion"/>)
            </summary>
        </member>
        <member name="F:Aequus.NPCs.GlobalNPCs.SpawnsManager.ValidSpawnParameters.DungeonTemple">
            <summary>
            Set to true to allow spawning while the player is inside of the Dungeon or Lihzahrd Temple (<see cref="P:Terraria.Player.ZoneDungeon"/> / <see cref="P:Terraria.Player.ZoneLihzhardTemple"/>)
            </summary>
        </member>
        <member name="P:Aequus.Helper.HasMouseItem">
            <summary>
            Determines whether or not the mouse has an item
            </summary>
        </member>
        <member name="M:Aequus.Helper.AddConditionToExistingRule``1(Terraria.ModLoader.NPCLoot,System.Func{``0,System.Boolean},Terraria.GameContent.ItemDropRules.IItemDropRuleCondition)">
            <summary>
            Attempts to find an <see cref="T:Terraria.GameContent.ItemDropRules.IItemDropRule"/> which falls under the condition, then replaces it with a <see cref="T:Terraria.GameContent.ItemDropRules.LeadingConditionRule"/> which activates the rule on success. Returns false if no rule is found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loot"></param>
            <param name="condition"></param>
            <param name="ruleCondition"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.Find``1(Terraria.ModLoader.ItemLoot,System.Func{``0,System.Boolean},``0@)">
            <summary>
            Attempts to find an <see cref="T:Terraria.GameContent.ItemDropRules.IItemDropRule"/> which falls under the condition. Returns false if no rule is found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loot"></param>
            <param name="condition"></param>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.Find``1(Terraria.ModLoader.NPCLoot,System.Func{``0,System.Boolean},``0@)">
            <summary>
            Attempts to find an <see cref="T:Terraria.GameContent.ItemDropRules.IItemDropRule"/> which falls under the condition. Returns false if no rule is found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loot"></param>
            <param name="condition"></param>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.Find``1(System.Collections.Generic.List{Terraria.GameContent.ItemDropRules.IItemDropRule},System.Func{``0,System.Boolean},``0@)">
            <summary>
            Attempts to find an <see cref="T:Terraria.GameContent.ItemDropRules.IItemDropRule"/> which falls under the condition. Returns false if no rule is found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="condition"></param>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.FindFirst``1(System.Collections.Generic.List{Terraria.GameContent.ItemDropRules.IItemDropRule},Terraria.GameContent.ItemDropRules.IItemDropRule@)">
            <summary>
            Attempts to find the first result of <see cref="T:Terraria.GameContent.ItemDropRules.IItemDropRule"/> of the specified type parameter <typeparamref name="T"/>. Recommended to use <see cref="M:Aequus.Helper.Find``1(System.Collections.Generic.List{Terraria.GameContent.ItemDropRules.IItemDropRule},System.Func{``0,System.Boolean},``0@)"/> instead for more consistent results. Returns false if no rule is found.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.GetLightingSection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the mean of light surrounding a point
            </summary>
            <param name="x">The tile's X coordinate</param>
            <param name="y">The tile's Y coordinate</param>
            <param name="width">The width in tiles</param>
            <param name="height">The width in tiles</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.GetLightingSection(Microsoft.Xna.Framework.Point,System.Int32,System.Int32)">
            <summary>
            Gets the mean of light surrounding a point
            </summary>
            <param name="tilePosition">The tile center</param>
            <param name="width">The width in tiles</param>
            <param name="height">The width in tiles</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.GetLightingSection(Microsoft.Xna.Framework.Point,System.Int32)">
            <summary>
            Gets the mean of light surrounding a point
            </summary>
            <param name="tilePosition">The tile center</param>
            <param name="tilesSize">The size in tile coordinates</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.GetLightingSection(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the mean of light surrounding a point
            </summary>
            <param name="x">The center tile X</param>
            <param name="y">The center tile Y</param>
            <param name="tilesSize">The size in tile coordinates</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.GetLightingSection(Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Gets the mean of light surrounding a point
            </summary>
            <param name="worldPosition">The center</param>
            <param name="tilesSize">The size in tile coordinates</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.FindProjectileIdentity(System.Int32,System.Int32)">
            <summary>
            Attempts to find a projectile index using the identity and owner provided. Returns -1 otherwise.
            </summary>
            <param name="owner"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Helper.DrawTile(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Replica of how Terraria draws tiles. Doesn't have support for color slices so this is only useful on glowmasks.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="texture"></param>
            <param name="drawCoordinates"></param>
            <param name="fullBlockDrawColor"></param>
            <param name="frameX"></param>
            <param name="frameY"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Aequus.Content.Boss.OmegaStarite.OmegaStarite.Ring.#ctor(System.IO.BinaryReader)">
            <summary>
            Creates a Ring through a net package
            </summary>
            <param name="reader"></param>
        </member>
        <member name="T:Aequus.Content.CrossMod.ModCalls.ModCallManager">
            <summary>
            Check https://terrariamods.wiki.gg/wiki/Aequus/Mod_Calls
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.Invalid">
            <summary>
            For enemies which cannot be turned into player zombies
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.One">
            <summary>
            Tier for pre-Evil enemies
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.Two">
            <summary>
            Tier for post-Evils/Skeletron/Underworld enemies
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.Three">
            <summary>
            Tier for pre-Golem enemies, and pre-Hardmode minibosses
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.Four">
            <summary>
            Tier for pre-Golem Hardmode minibosses and strong/special enemies (Wraiths and Giant Tortises are here too.)
            </summary>
        </member>
        <member name="P:Aequus.Content.Necromancy.GhostInfo.Five">
            <summary>
            Tier for post-Golem Minibosses and post-ML enemies
            </summary>
        </member>
        <member name="M:Aequus.Content.Necromancy.NecromancyDatabase.CallAddNecromancyData(Terraria.ModLoader.Mod,System.Object[])">
            <summary>
            Adds a NecroStats data for an npc index in <see cref="P:Aequus.Content.Necromancy.NecromancyDatabase.NPCs"/>
            <para>Parameter 1: NPC Type (short)</para>
            <para>Parameter 2: Tier (float), <see cref="T:Aequus.Items.Weapons.Summon.Scepters.ZombieScepter"/> is tier 1, <see cref="T:Aequus.Items.Weapons.Summon.Scepters.Insurgency"/> is tier 4</para>
            <para>Parameter 3 (Optional): View range (float), how close a slave needs to be to an enemy in order for it to target it. Defaults to 800</para>
            <para>Please handle these mod calls in <see cref="M:Terraria.ModLoader.Mod.PostSetupContent"/>. As buff immunities are setup in <see cref="M:Aequus.IAddRecipes.AddRecipes(Aequus.Aequus)"/></para>
            </summary>
            <param name="callingMod"></param>
            <param name="args"></param>
            <returns>'Success' when correctly handled. 'Failure' when improperly handled</returns>
        </member>
        <member name="M:Aequus.Content.Necromancy.NecromancyDatabase.Get(System.Int32)">
            <summary>
            Attempts to get the data for this NPC ID, otherwise throws an exception. Does not take netIDs into account
            <para>If you are wanting to use a safer method, please use <see cref="M:Aequus.Content.Necromancy.NecromancyDatabase.TryGet(System.Int32,Aequus.Content.Necromancy.GhostInfo@)"/></para>
            </summary>
            <param name="type">the NPC ID.</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Content.Necromancy.NecromancyDatabase.Get(Terraria.NPC)">
            <summary>
            Attempts to get the data for this NPC ID, otherwise throws an exception. Does not take netIDs into account
            <para>If you are wanting to use a safer method, please use <see cref="M:Aequus.Content.Necromancy.NecromancyDatabase.TryGet(Terraria.NPC,Aequus.Content.Necromancy.GhostInfo@)"/></para>
            </summary>
            <param name="npc">the NPC instance</param>
            <returns></returns>
        </member>
        <member name="M:Aequus.Content.Necromancy.NecromancyDatabase.TryGet(System.Int32,Aequus.Content.Necromancy.GhostInfo@)">
            <summary>
            Tries to get a <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> value using the given NPC Net ID. Returns false if no info exists, and the popped <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> would be useless.
            </summary>
            <param name="netID">The Net ID (Basically the same as npc.type, but is negative for specialized enemies)</param>
            <param name="value">The released <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> value, when this method returns false this is set to default(GhostInfo)</param>
            <returns>Whether or not there is <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> related to this NPC Net ID</returns>
        </member>
        <member name="M:Aequus.Content.Necromancy.NecromancyDatabase.TryGet(Terraria.NPC,Aequus.Content.Necromancy.GhostInfo@)">
            <summary>
            Tries to get a <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> value using the given NPC. Returns false if no info exists, and the popped <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> would be useless.
            </summary>
            <param name="npc">The NPC instance</param>
            <param name="value">The released <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> value, when this method returns false this is set to default(GhostInfo)</param>
            <returns>Whether or not there is <see cref="T:Aequus.Content.Necromancy.GhostInfo"/> related to this NPC Net ID</returns>
        </member>
        <member name="T:Aequus.Content.WorldGeneration.StructureLookups">
            <summary>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> of {<see cref="T:System.String"/>, <see cref="T:Microsoft.Xna.Framework.Point"/>} for looking up special structures in the world.
            </summary>
        </member>
        <member name="M:Aequus.Content.WorldGeneration.StructureLookups.Add(System.String,Microsoft.Xna.Framework.Point)">
            <summary>
            Adds a structure to the list
            </summary>
            <param name="name">The name of the structure</param>
            <param name="location">The location of the structure in tile coordinates</param>
        </member>
        <member name="M:Aequus.Content.WorldGeneration.StructureLookups.GetLocation(System.String)">
            <summary>
            Gets the location of a structure using a name
            </summary>
            <param name="name">The name of the structure</param>
            <returns></returns>
        </member>
        <member name="P:Aequus.Particles.SnowgraveCorpse.OnFreezeNPC">
            <summary>
            Parameter 1: {NPC} - The NPC which is being sudo cloned
            <para>Parameter 2: {NPC} - The clone result</para>
            </summary>
        </member>
        <member name="P:Aequus.Particles.SnowgraveCorpse.CustomDraw">
            <summary>
            Parameter 1: {NPC} - The NPC which is being sudo cloned
            <para>Parameter 2: {NPC} - The NPC</para>
            </summary>
        </member>
        <member name="P:Aequus.Particles.SnowgraveCorpse.CustomUpdate">
            <summary>
            Parameter 1: {ABasicParticle} - Will always be FrozenNPC, but for soft reference purposes, this is left as a generic vanilla class.
            <para>Parameter 2: {NPC} - The NPC</para>
            </summary>
        </member>
        <member name="T:Aequus.Tiles.TileHooks.IUniqueTileInteractions">
            <summary>
            Provides a method to be called when recieving the <see cref="T:Aequus.Networking.PacketUniqueTileInteraction"/> packet. Allowing for effects to be synced on the network easier.
            </summary>
        </member>
    </members>
</doc>
